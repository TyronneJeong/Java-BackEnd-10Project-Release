계산기 코드 작성
- TDD 기반으로 테스트 코드를 동반 하고 있다.
- 입력 숫자 2개와 연산자 1개를 입력 받아 결과를 리턴 하는 함수를 작성한다.

[리팩토링1]
- enum 클래스 선언 및 각 enum 항목별 추상메소드를 오버라이드 하여 결과를 리턴하는 식의 코드 구성을 한다.
- calculator 메소드를 구현 후 enum 클래스에 정의된 값들을 Arrays.stream(values()) 형태로 호출 하여 초기화를 유동적으로 할수 있다.
- 최종적으로 생성자에 미리 정의된 함수 호출로 대입된 두 인자와 오퍼레이션 값을 리턴한다.

[리팩토링2]
- 인터페이스 기반의 구현. 인터페이스에서는 입력된 오퍼레이션을 지원하는지에 대한 여부(supports) 와 실제 연산 처리를 담당하는 calculate()메소드가 정의되어있따.
- +, -, *, / 을 정의한 각 구현 클래스들이 존재한다.
- 구현 클래스들을 담은 목록 List를 순회하면서 매칭되는 오퍼레이션이 존재하면, 계산을 수행하는 식으로 메서드 체이닝을 건다.
- 테스트 자동화를 위해 @ParameterizedTest 어노테이션과 @MethodSource를 통한 메소드 리턴값을 인자로 사용하는 방법을 배운다.